%% First Attempt to Control

clear acc
clear t

total_t = 20;

%% Arrays
T = 0.03;
[t,acc,x,V] = Run.prepare_run(total_t,T);
N = length(t);

g  = zeros(size(t));
gf = zeros(size(t));

vf = zeros(size(t));
xf = zeros(size(t));
%% Profiling

read_time    = zeros(size(t));
process_time = zeros(size(t));
actuate_time = zeros(size(t));


%% Filters
alpha_low = 0.2;
lp = @(y,x) (alpha_low*y + (1-alpha_low)*x);
alpha_high = 0.1;
hp = @(y,x_1,x_2) ((1-alpha_high)*y + (1-alpha_high)*(x_1 - x_2));
d  = @(x,x2) -(x-x2);

%% Start
a.roundTrip(0,0);

cut_off = [0.15 0.1 0.15]; % [xf vf gf]
g_cut_off = 0.1;

%% Controller

Kx = 0;
Kv = 7e2;
Kg = 0;



%% Start loop
n_samples = 2;
i = n_samples + 1;
tic
prev = 0;
elapsed_time = toc;
while (elapsed_time < total_t)
    elapsed_time = toc;
    if Run.sample_time(1e-4,T,prev,elapsed_time)
        t(i)   = elapsed_time;
        acc(i) = a.sample();
%         read_time(i) = toc - elapsed_time;
        g(i)   = n_to_g(3,acc(i));
        prev = elapsed_time;
        %% Signal Processing
%         x(2,i) = d(g(i),g(i-1));
%         vf(i) = lp(vf(i-1),x(2,i));
%         x(1,i) = -g(i);
        x(:,i) = con.predict(i,x(:,i-1),0,g(i));
        if any(abs([x(:,i)' g(i)]) > cut_off) && true
            V(i) = -[Kx Kv Kg]*[x(:,2); g(i)]';
            [n,dir] = V_to_N(V(i));
            a.roundTrip(dir,n);
        end
        i = i + 1;
    end
end

a.roundTrip(0,0);
%%
run = Run(T,t,acc,x,V);
run.store();
%%

run.plot(3,[5 3])

%%

[X,f] = DSP.get_fft(T,run.g);
f_damped = DSP.damped_f(X,f,1)

r = DSP.nm_rms(run.g)
damping = DSP.get_damping(run.T,run.t,run.g)
DSP.plot_exp(run.T,run.t,run.g)
